/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/gameoverscreen_screen/GameOverScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

GameOverScreenViewBase::GameOverScreenViewBase() :
    buttonCallback(this, &GameOverScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    GameOver.setXY(64, 83);
    GameOver.setColor(touchgfx::Color::getColorFromRGB(24, 250, 7));
    GameOver.setLinespacing(0);
    GameOver.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T1N0));
    add(GameOver);

    textHolder.setXY(46, 138);
    textHolder.setColor(touchgfx::Color::getColorFromRGB(255, 226, 3));
    textHolder.setLinespacing(0);
    textHolder.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BL70));
    add(textHolder);

    player_level.setPosition(125, 141, 100, 18);
    player_level.setColor(touchgfx::Color::getColorFromRGB(247, 207, 2));
    player_level.setLinespacing(0);
    Unicode::snprintf(player_levelBuffer, PLAYER_LEVEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8R2Q).getText());
    player_level.setWildcard(player_levelBuffer);
    player_level.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3VQU));
    add(player_level);

    textHolder2.setXY(17, 186);
    textHolder2.setColor(touchgfx::Color::getColorFromRGB(252, 5, 5));
    textHolder2.setLinespacing(0);
    textHolder2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0WHI));
    add(textHolder2);

    player_score.setPosition(151, 185, 100, 18);
    player_score.setColor(touchgfx::Color::getColorFromRGB(255, 5, 5));
    player_score.setLinespacing(0);
    Unicode::snprintf(player_scoreBuffer, PLAYER_SCORE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3PV5).getText());
    player_score.setWildcard(player_scoreBuffer);
    player_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7QQM));
    add(player_score);

    Homebutton.setXY(180, 260);
    Homebutton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_FILLED_50_50_FCFEFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_FILLED_50_50_5B5D5E_SVG_ID));
    Homebutton.setIconXY(5, 3);
    Homebutton.setAction(buttonCallback);
    add(Homebutton);
}

GameOverScreenViewBase::~GameOverScreenViewBase()
{

}

void GameOverScreenViewBase::setupScreen()
{
    transitionBegins();
}

void GameOverScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Homebutton)
    {
        //Interaction2
        //When Homebutton clicked change screen to StartScreen
        //Go to StartScreen with screen transition towards East
        application().gotoStartScreenScreenSlideTransitionEast();
    }
}

void GameOverScreenViewBase::transitionBegins()
{
    //Interaction1
    //When screen transition begins call showPlayerStat on GameOverScreen
    //Call showPlayerStat
    showPlayerStat();
}
