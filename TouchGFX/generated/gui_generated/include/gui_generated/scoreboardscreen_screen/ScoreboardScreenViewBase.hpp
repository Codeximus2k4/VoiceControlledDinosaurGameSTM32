/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCOREBOARDSCREENVIEWBASE_HPP
#define SCOREBOARDSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/scoreboardscreen_screen/ScoreboardScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class ScoreboardScreenViewBase : public touchgfx::View<ScoreboardScreenPresenter>
{
public:
    ScoreboardScreenViewBase();
    virtual ~ScoreboardScreenViewBase();
    virtual void setupScreen();
    virtual void transitionBegins();

    /*
     * Custom Actions
     */
    virtual void updateScore()
    {
        // Override and implement this function in Screen1
    }
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ButtonWithIcon Homebutton;
    touchgfx::TextArea textArea1;
    touchgfx::TextAreaWithOneWildcard level1_score;
    touchgfx::TextAreaWithOneWildcard level2_score;
    touchgfx::TextAreaWithOneWildcard level3_score;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LEVEL1_SCORE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar level1_scoreBuffer[LEVEL1_SCORE_SIZE];
    static const uint16_t LEVEL2_SCORE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar level2_scoreBuffer[LEVEL2_SCORE_SIZE];
    static const uint16_t LEVEL3_SCORE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar level3_scoreBuffer[LEVEL3_SCORE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScoreboardScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCOREBOARDSCREENVIEWBASE_HPP
