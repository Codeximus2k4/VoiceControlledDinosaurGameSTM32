/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GAMESCREENVIEWBASE_HPP
#define GAMESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/gamescreen_screen/GameScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/progress_indicators/LineProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565Bitmap.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class GameScreenViewBase : public touchgfx::View<GameScreenPresenter>
{
public:
    GameScreenViewBase();
    virtual ~GameScreenViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();

    /*
     * Custom Actions
     */
    virtual void gotoGameOverScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void tickEvent()
    {
        // Override and implement this function in GameScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background2;
    touchgfx::Image background;
    touchgfx::Image dinosaur;
    touchgfx::Image cactus;
    touchgfx::Image lives_1;
    touchgfx::Image lives_2;
    touchgfx::Image lives_3;
    touchgfx::LineProgress volumeLevel;
    touchgfx::PainterRGB565Bitmap volumeLevelPainter;
    touchgfx::Image low_volume;
    touchgfx::Image high_volume;
    touchgfx::TextArea high_volume_text;
    touchgfx::TextArea low_volume_text;
    touchgfx::Image special_cactus;
    touchgfx::TextAreaWithOneWildcard scoreArea;
    touchgfx::Image bird;
    touchgfx::Image image1;
    touchgfx::Image image2;
    touchgfx::Image image2_1_3_1;
    touchgfx::Image image2_1;
    touchgfx::Image image2_1_3;
    touchgfx::Image image2_1_1;
    touchgfx::Image image2_1_2;
    touchgfx::Image image3;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SCOREAREA_SIZE = 20;
    touchgfx::Unicode::UnicodeChar scoreAreaBuffer[SCOREAREA_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // GAMESCREENVIEWBASE_HPP
